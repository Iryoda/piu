// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String
  username String
  password String

  profile Profile?
  posts   Post[]
  comment Comment[]
  like    Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([email, username])
}

model Profile {
  id     String @id @default(uuid())
  userId String @unique
  about  String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Comment {
  id        String  @id @default(uuid())
  content   String
  profileId String?
  postId    String?
  commentId String?
  userId    String

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  post     Post?     @relation(fields: [postId], references: [id], onDelete: Cascade)
  Comment  Comment?  @relation("CommentToComment", fields: [commentId], references: [id], onDelete: Cascade)
  comments Comment[] @relation("CommentToComment")

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Like {
  id     String @id @default(uuid())
  userId String
  postId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)


  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Post {
  id      String @id @default(uuid())
  content String
  userId  String

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments Comment[]
  like     Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
